#!/usr/bin/env bash
set -uefo pipefail
createbranch=yes
commitmessage=
nofzf=
noassignee=

DEFAULTLIMIT=30
AWK="awk"
SED="sed"
type -p gawk >/dev/null && AWK=gawk
type -p gsed >/dev/null && SED=gsed

git rev-parse --show-toplevel 2>/dev/null >/dev/null || {
	echo "error: not in a git repository" >&2
	exit 1
}

function usage {
	echo "Usage: gh-workon [-h] issue-to-search"
	echo "  -h: show this help"
	echo "  -N: do not create branch, just show it"
	echo "  -c: create a commit message out of the issue"
	echo "  -A: do not automatically assign the issue to the current user"
    echo "  -l: limit the number of issues to list (default: $DEFAULTLIMIT)"
	echo "  -F: use issue directly don't search for it (useful if you reach limit)"
}

while getopts "cFNhAl:" o; do
	case "${o}" in
    A)
        noassignee=true;;
	l)
		limit=$OPTARG;;
	c)
		commitmessage=t;;
	h)
		usage
		exit 0
		;;
	F)
		nofzf=yes
		;;
	N)
		createbranch=
		;;
	*)
		echo "Invalid option: -$1" >&2
		usage
		exit 1
		;;
	esac
done
shift $((OPTIND - 1))

ARGS="$*"

if [[ -n ${nofzf} && -z ${ARGS} ]]; then
	echo "need a arg when -F"
	exit 1
elif [[ -n ${nofzf} ]]; then
	nofzf=${ARGS[0]}
elif [[ -n ${ARGS} ]]; then
	ARGS="-q $*"
fi

[[ -n ${commitmessage} && -z ${ARGS} && $(basename $(git symbolic-ref -q HEAD)) =~ issue-([0-9]*) ]] && {
	ARGS="-q ${BASH_REMATCH[1]}"
}

export CLICOLOR_FORCE=1
if [[ -n ${nofzf} ]];then
    _resp=$(gh issue view --json 'number,title' --jq '"#" + (.number|tostring) + " " + .title' ${nofzf})
    title=${_resp#* }
    n=${_resp%% *}
    number=${n#\#}
else
    title=$(gh issue list -L ${limit} --json number,title --jq '.[] | "#" + (.number|tostring) + " " + .title' | ${SED} -e "s/'//g" -e 's/`//g' | fzf -1 ${ARGS} --ansi --header "Choose a GitHUB Issue" --ansi --preview="env GH_FORCE_TTY=80% CLICOLOR_FORCE=1 gh issue view \`echo '{}'|${SED} 's/#\([0-9]*\).*/\1/'\`")
    number=$(echo $title | ${SED} 's/[ ]*#\([0-9]*\).*/\1/')
fi

if [[ -n ${commitmessage} ]]; then
	echo $title | ${SED} -r 's/[ ]*#[0-9]+[ ]*//;'
	echo
	echo "Fixes #$number"
	exit
fi

prefix=$(echo "$title" | ${SED} -r 's,kind/\w+,,;s/help wanted//;s/[ ]*#(.*)/\L\1/;s/ [ ]*/ /g;s/[ ]*$//;s/^[ ]*//;s/ /-/g;s,/,,g;s,\(/\`||:|;|"|\|\),,g;s/\\n//g')
prefix=$(echo "${prefix}" | ${SED} -r "s/('|,)//g;")
prefix=$(echo "$prefix" | ${AWK} -v len=60 "{ if (length(\$0) > len) print substr(\$0, 1, len-3); else print; }")
[[ $prefix == *- ]] && prefix=$(echo ${prefix} | ${SED} 's/-$//')

if [[ -z ${title} || -z ${number} ]]; then
	echo "Can't get title or number"
	exit
fi

[[ -z ${noassignee} ]] && gh issue edit ${number} --add-assignee "@me"
[[ -n ${createbranch} ]] && {
	git checkout -b issue-${prefix}
	exit 0
}

echo issue-${prefix}
